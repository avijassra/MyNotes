@model  MyNotes.UI.Web.ViewModels.Admin.User.SaveUserViewModel

@using MyNotes.UI.Web.Setup.Extensions;
@using MvcBase.WebHelper.Mvc.Extensions;
@using MyNotes.UI.Web.UserServiceRef;
@using MyNotes.UI.Web.Setup.Common;

<div id="updateUser" class="updPnl" >
    @using (Ajax.BeginJqueryForm("frmUpdateUser", MVC.Admin.Actions.UpdateUser(), "updateUserCallback"))
    { 
        if (Session.GetValue<LoggedUserInfoDto>(SessionKey.LoggedUser).IsSysAccount)
        { 
            <div class="row-fluid">
                <div class="span3">
                    @Html.LabelFor(m => m.GroupId)
                </div>
                <div class="span6">
                    @Html.DropDownListFor(m => m.GroupId, (IEnumerable<SelectListItem>)ViewBag.Groups, new { @class = "input-xlarge" })
                </div>
            </div>
        }
        <div class="row-fluid">
            <div class="span3">
                @Html.LabelFor(m => m.Firstname)
            </div>
            <div class="span6">
                @Html.TextBoxFor(m => m.Firstname, new { placeholder = "John", @class = "input-xlarge" })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span3">
                @Html.LabelFor(m => m.Lastname)
            </div>
            <div class="span6">
                @Html.TextBoxFor(m => m.Lastname, new { placeholder = "Doe", @class = "input-xlarge" })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span3">
                @Html.LabelFor(m => m.Nickname)
            </div>
            <div class="span6">
                @Html.TextBoxFor(m => m.Nickname, new { placeholder = "Joe", @class = "input-xlarge" })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span3">
                @Html.LabelFor(m => m.Username)
            </div>
            <div class="span6">
                @Html.TextBoxFor(m => m.Username, new { placeholder = "jdoe", @class = "input-xlarge" })
            </div>
        </div>
        @Html.HiddenFor(m => m.Id, new { style = "display:none;" })
        <div class="row pull-right">
            <input type="submit" id="btnUpdateUser" class="btn btn-success" value="Update" />
            <a id="cancelUpdateUser" class="btn jqCancelUpdate" data-dismiss="modal">Cancel</a>
        </div>
    }
</div>